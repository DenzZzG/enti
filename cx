local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\75\19","\47\101\61\97\82\102\90"),function(v42) if (v9(v42,5 -3 )==79) then local v99=0;while true do if (v99==0) then v30=v8(v11(v42,1,1));return "";end end else local v100=v10(v8(v42,16));if v30 then local v110=v13(v100,v30);v30=nil;return v110;else return v100;end end end);local function v31(v43,v44,v45) if v45 then local v101=0;local v102;while true do if (v101==0) then v102=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v102-(v102%1) ;end end else local v103=2^(v44-1) ;return (((v43%(v103 + v103))>=v103) and (2 -1)) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==1) then return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;v49=1;end end end local function v35() local v54=v34();local v55=v34();local v56=2 -1 ;local v57=(v31(v55,1,20) * (2^32)) + v54 ;local v58=v31(v55,21,650 -(555 + 64) );local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else local v111=0;while true do if (v111==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==(931 -(857 + 74))) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==2) then v63={};for v112=1, #v62 do v63[v112]=v10(v9(v11(v62,v112,v112)));end v61=3;end if (v61==0) then v62=nil;if  not v60 then local v119=0;while true do if (v119==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=1;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (3==v61) then return v14(v63);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=0;local v79;local v80;while true do if (v78==0) then v79=v32();v80=nil;v78=1;end if (v78==1) then if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end end end v67[3]=v32();for v81=1,v34() do local v82=v32();if (v31(v82,1,1)==0) then local v106=0;local v107;local v108;local v109;while true do if (v106==0) then v107=v31(v82,929 -(214 + 713) ,3);v108=v31(v82,4,6);v106=1;end if (v106==2) then if (v31(v108,1,1)==1) then v109[1 + 1 ]=v69[v109[2]];end if (v31(v108,879 -(282 + 595) ,2)==1) then v109[3]=v69[v109[3]];end v106=3;end if (v106==1) then v109={v33(),v33(),nil,nil};if (v107==0) then v109[3]=v33();v109[4]=v33();elseif (v107==1) then v109[3]=v34();elseif (v107==2) then v109[3]=v34() -(2^16) ;elseif (v107==3) then local v133=0;while true do if (0==v133) then v109[3]=v34() -(2^16) ;v109[4]=v33();break;end end end v106=2;end if (3==v106) then if (v31(v108,3,3)==1) then v109[4]=v69[v109[4]];end v64[v81]=v109;break;end end end end for v83=1,v34() do v65[v83-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=1;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v104=1637 -(1523 + 114) ,v93 do if (v104>=v87) then v91[v104-v87 ]=v92[v104 + 1 ];else v95[v104]=v92[v104 + 1 + 0 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do local v105=0;while true do if (v105==1) then if (v98<=47) then if (v98<=(31 -8)) then if (v98<=11) then if (v98<=5) then if (v98<=2) then if (v98<=0) then local v136=v97[2];local v137={v95[v136](v95[v136 + 1 ])};local v138=0;for v199=v136,v97[4] do v138=v138 + (1066 -(68 + 997)) ;v95[v199]=v137[v138];end elseif (v98==1) then v95[v97[2]]=v97[3]~=(1270 -(226 + 1044)) ;elseif (v95[v97[2]]~=v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=3) then local v139=v97[2];do return v21(v95,v139,v90);end elseif (v98>4) then local v224=v97[2];local v225,v226=v88(v95[v224](v95[v224 + 1 ]));v90=(v226 + v224) -1 ;local v227=0;for v328=v224,v90 do local v329=0;while true do if (v329==0) then v227=v227 + (4 -3) ;v95[v328]=v225[v227];break;end end end elseif (v95[v97[2]]~=v95[v97[4]]) then v89=v89 + (118 -(32 + 85)) ;else v89=v97[3];end elseif (v98<=8) then if (v98<=6) then v95[v97[2]]= #v95[v97[3]];elseif (v98>7) then local v228=0;local v229;local v230;local v231;while true do if (v228==1) then v231=v95[v229 + 2 ];if (v231>0) then if (v230>v95[v229 + 1 + 0 ]) then v89=v97[3];else v95[v229 + 3 ]=v230;end elseif (v230<v95[v229 + 1 ]) then v89=v97[3];else v95[v229 + 3 ]=v230;end break;end if (v228==0) then v229=v97[2 + 0 ];v230=v95[v229];v228=1;end end else local v232=v97[959 -(892 + 65) ];local v233={};for v330=1, #v94 do local v331=0;local v332;while true do if (v331==0) then v332=v94[v330];for v439=0, #v332 do local v440=v332[v439];local v441=v440[1];local v442=v440[2];if ((v441==v95) and (v442>=v232)) then v233[v442]=v441[v442];v440[1]=v233;end end break;end end end end elseif (v98<=9) then v72[v97[3]]=v95[v97[2]];elseif (v98>10) then v95[v97[2]]=v73[v97[3]];elseif (v97[4 -2 ]==v95[v97[4]]) then v89=v89 + (1 -0) ;else v89=v97[3];end elseif (v98<=17) then if (v98<=(25 -11)) then if (v98<=12) then v95[v97[2]]=v95[v97[3]]%v97[4] ;elseif (v98>13) then local v236=0;local v237;while true do if (v236==0) then v237=v97[2];do return v95[v237](v21(v95,v237 + (351 -(87 + 263)) ,v97[3]));end break;end end else v89=v97[3];end elseif (v98<=15) then v95[v97[2]]=v97[3] + v95[v97[184 -(67 + 113) ]] ;elseif (v98==16) then local v239=0;local v240;while true do if (v239==0) then v240=v97[2 + 0 ];v95[v240]=v95[v240](v21(v95,v240 + 1 ,v90));break;end end else local v241=v97[4 -2 ];v95[v241](v95[v241 + 1 + 0 ]);end elseif (v98<=20) then if (v98<=18) then v95[v97[2]]=v95[v97[11 -8 ]][v97[4]];elseif (v98==19) then v95[v97[954 -(802 + 150) ]]=v95[v97[3]];elseif (v95[v97[2]]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=(56 -35)) then local v147=0;local v148;local v149;while true do if (v147==0) then v148=v97[3];v149=v95[v148];v147=1;end if (1==v147) then for v364=v148 + 1 ,v97[4] do v149=v149   .. v95[v364] ;end v95[v97[2]]=v149;break;end end elseif (v98>22) then local v244=0;local v245;local v246;local v247;local v248;while true do if (2==v244) then for v427=v245,v90 do v248=v248 + 1 ;v95[v427]=v246[v248];end break;end if (0==v244) then v245=v97[2];v246,v247=v88(v95[v245](v21(v95,v245 + (1 -0) ,v97[3])));v244=1;end if (v244==1) then v90=(v247 + v245) -1 ;v248=0;v244=2;end end elseif (v95[v97[2]]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=(26 + 9)) then if (v98<=29) then if (v98<=26) then if (v98<=24) then for v202=v97[2],v97[3] do v95[v202]=nil;end elseif (v98==25) then v95[v97[2]]=v95[v97[3]][v97[4]];else v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;end elseif (v98<=27) then local v150=0;local v151;local v152;local v153;while true do if (v150==1) then v153=v95[v151 + 2 ];if (v153>(997 -(915 + 82))) then if (v152>v95[v151 + 1 ]) then v89=v97[3];else v95[v151 + 3 ]=v152;end elseif (v152<v95[v151 + 1 ]) then v89=v97[8 -5 ];else v95[v151 + 3 ]=v152;end break;end if (v150==0) then v151=v97[2];v152=v95[v151];v150=1;end end elseif (v98==28) then if (v95[v97[2]]==v97[3 + 1 ]) then v89=v89 + 1 ;else v89=v97[3];end else local v252=0;local v253;while true do if (v252==0) then v253=v97[2];v95[v253]=v95[v253]();break;end end end elseif (v98<=32) then if (v98<=30) then local v154=v97[2];local v155={v95[v154](v95[v154 + 1 ])};local v156=0;for v204=v154,v97[4] do local v205=0;while true do if (v205==0) then v156=v156 + 1 ;v95[v204]=v155[v156];break;end end end elseif (v98>31) then v95[v97[2]]=v95[v97[3]]%v97[4] ;else local v255=0;local v256;while true do if (0==v255) then v256=v97[2];v95[v256](v21(v95,v256 + 1 ,v90));break;end end end elseif (v98<=33) then for v206=v97[2 -0 ],v97[3] do v95[v206]=nil;end elseif (v98==34) then local v257=v97[1189 -(1069 + 118) ];local v258=v97[4];local v259=v257 + 2 ;local v260={v95[v257](v95[v257 + 1 ],v95[v259])};for v339=1,v258 do v95[v259 + v339 ]=v260[v339];end local v261=v260[1];if v261 then local v369=0;while true do if (v369==0) then v95[v259]=v261;v89=v97[6 -3 ];break;end end else v89=v89 + (1 -0) ;end else local v262=v97[2];v95[v262](v21(v95,v262 + 1 ,v97[3]));end elseif (v98<=(8 + 33)) then if (v98<=38) then if (v98<=36) then local v157=v97[2];local v158=v95[v157 + 2 ];local v159=v95[v157] + v158 ;v95[v157]=v159;if (v158>0) then if (v159<=v95[v157 + (1 -0) ]) then local v370=0;while true do if (v370==0) then v89=v97[3];v95[v157 + 3 ]=v159;break;end end end elseif (v159>=v95[v157 + 1 + 0 ]) then v89=v97[3];v95[v157 + 3 ]=v159;end elseif (v98==37) then if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else local v263=v97[2];local v264=v97[4];local v265=v263 + 2 ;local v266={v95[v263](v95[v263 + 1 ],v95[v265])};for v342=1,v264 do v95[v265 + v342 ]=v266[v342];end local v267=v266[1];if v267 then local v374=0;while true do if (v374==0) then v95[v265]=v267;v89=v97[3];break;end end else v89=v89 + 1 ;end end elseif (v98<=39) then local v161=v97[2];v95[v161](v21(v95,v161 + 1 ,v90));elseif (v98==40) then v95[v97[2]]=v73[v97[3]];else v95[v97[2]]=v97[3]~=0 ;end elseif (v98<=44) then if (v98<=42) then local v162=v97[2];v95[v162](v95[v162 + 1 ]);elseif (v98>43) then local v271=0;local v272;local v273;local v274;while true do if (v271==2) then if (v273>0) then if (v274<=v95[v272 + 1 ]) then v89=v97[3];v95[v272 + 3 ]=v274;end elseif (v274>=v95[v272 + (792 -(368 + 423)) ]) then v89=v97[3];v95[v272 + 3 ]=v274;end break;end if (v271==1) then v274=v95[v272] + v273 ;v95[v272]=v274;v271=2;end if (v271==0) then v272=v97[2];v273=v95[v272 + 2 ];v271=1;end end else local v275=v97[2];v95[v275]=v95[v275](v21(v95,v275 + 1 ,v90));end elseif (v98<=45) then local v163=v97[2];local v164=v95[v97[9 -6 ]];v95[v163 + 1 ]=v164;v95[v163]=v164[v97[4]];elseif (v98==46) then local v277=0;local v278;local v279;local v280;local v281;while true do if (v277==0) then v278=v97[2];v279,v280=v88(v95[v278](v21(v95,v278 + (19 -(10 + 8)) ,v90)));v277=1;end if (2==v277) then for v430=v278,v90 do local v431=0;while true do if (v431==0) then v281=v281 + 1 ;v95[v430]=v279[v281];break;end end end break;end if (v277==1) then v90=(v280 + v278) -1 ;v281=0;v277=2;end end else local v282=v97[2];local v283=v95[v282];for v345=v282 + 1 ,v90 do v15(v283,v95[v345]);end end elseif (v98<=71) then if (v98<=(226 -167)) then if (v98<=53) then if (v98<=50) then if (v98<=48) then local v168=v86[v97[3]];local v169;local v170={};v169=v18({},{[v7("\147\17\162\69\195\82\6","\105\204\78\203\43\167\55\126")]=function(v208,v209) local v210=v170[v209];return v210[1][v210[2]];end,[v7("\154\149\45\27\4\13\201\85\160\178","\49\197\202\67\126\115\100\167")]=function(v211,v212,v213) local v214=v170[v212];v214[1][v214[2]]=v213;end});for v216=1,v97[4] do local v217=0;local v218;while true do if (0==v217) then v89=v89 + 1 ;v218=v85[v89];v217=1;end if (v217==1) then if (v218[1]==94) then v170[v216-1 ]={v95,v218[3]};else v170[v216-1 ]={v72,v218[3]};end v94[ #v94 + 1 ]=v170;break;end end end v95[v97[2]]=v40(v168,v169,v73);elseif (v98==49) then v95[v97[2]]=v97[9 -6 ];else v95[v97[2]]();end elseif (v98<=51) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;elseif (v98==52) then if (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end else local v286=0;local v287;while true do if (v286==0) then v287=v97[2];v95[v287]=v95[v287]();break;end end end elseif (v98<=56) then if (v98<=54) then do return;end elseif (v98>(24 + 31)) then local v288=v97[2];v95[v288]=v95[v288](v95[v288 + 1 ]);else v95[v97[2]]=v97[3];end elseif (v98<=57) then local v173=0;local v174;while true do if (v173==0) then v174=v97[3 -1 ];v95[v174](v21(v95,v174 + 1 ,v97[3]));break;end end elseif (v98>58) then if (v95[v97[2]]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else local v292=v97[2];do return v95[v292](v21(v95,v292 + 1 ,v97[3]));end end elseif (v98<=65) then if (v98<=62) then if (v98<=60) then local v175=v97[3];local v176=v95[v175];for v219=v175 + 1 ,v97[442 -(145 + 293) ] do v176=v176   .. v95[v219] ;end v95[v97[2]]=v176;elseif (v98==61) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else do return;end end elseif (v98<=63) then v95[v97[2]]= #v95[v97[3]];elseif (v98>64) then v95[v97[2]]=v72[v97[3]];elseif v95[v97[2]] then v89=v89 + 1 ;else v89=v97[433 -(44 + 386) ];end elseif (v98<=68) then if (v98<=(1552 -(998 + 488))) then if (v95[v97[2]]~=v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>(22 + 45)) then v73[v97[3]]=v95[v97[2]];else local v299=0;local v300;local v301;local v302;local v303;while true do if (2==v299) then for v434=v300,v90 do v303=v303 + 1 ;v95[v434]=v301[v303];end break;end if (v299==1) then v90=(v302 + v300) -1 ;v303=0;v299=2;end if (v299==0) then v300=v97[2];v301,v302=v88(v95[v300](v95[v300 + 1 ]));v299=1;end end end elseif (v98<=69) then if (v97[2]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==70) then v95[v97[2]]=v97[3] + v95[v97[4]] ;else v73[v97[3]]=v95[v97[2]];end elseif (v98<=83) then if (v98<=77) then if (v98<=74) then if (v98<=72) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==(60 + 13)) then local v309=0;local v310;while true do if (v309==0) then v310=v97[2];v95[v310]=v95[v310](v95[v310 + 1 ]);break;end end else v95[v97[2]]={};end elseif (v98<=75) then local v179=0;local v180;local v181;while true do if (0==v179) then v180=v97[2];v181=v95[v180];v179=1;end if (1==v179) then for v380=v180 + 1 ,v90 do v15(v181,v95[v380]);end break;end end elseif (v98==76) then local v312=v97[2];v95[v312]=v95[v312](v21(v95,v312 + 1 ,v97[3]));else v95[v97[2]]={};end elseif (v98<=80) then if (v98<=78) then local v182=0;local v183;local v184;while true do if (v182==0) then v183=v97[2];v184=v95[v97[3]];v182=1;end if (v182==1) then v95[v183 + 1 ]=v184;v95[v183]=v184[v97[4]];break;end end elseif (v98==79) then if (v95[v97[2]]==v95[v97[776 -(201 + 571) ]]) then v89=v89 + 1 ;else v89=v97[3];end elseif  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=81) then local v185=0;local v186;local v187;local v188;while true do if (v185==1) then v188={};v187=v18({},{[v7("\8\100\214\39\132\83\70","\62\87\59\191\73\224\54")]=function(v383,v384) local v385=v188[v384];return v385[1][v385[2]];end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v386,v387,v388) local v389=0;local v390;while true do if (0==v389) then v390=v188[v387];v390[1][v390[2]]=v388;break;end end end});v185=2;end if (v185==2) then for v391=1,v97[1142 -(116 + 1022) ] do local v392=0;local v393;while true do if (v392==1) then if (v393[1]==(391 -297)) then v188[v391-1 ]={v95,v393[3]};else v188[v391-(1 + 0) ]={v72,v393[3]};end v94[ #v94 + 1 ]=v188;break;end if (0==v392) then v89=v89 + 1 ;v393=v85[v89];v392=1;end end end v95[v97[2]]=v40(v186,v187,v73);break;end if (v185==0) then v186=v86[v97[3]];v187=nil;v185=1;end end elseif (v98>82) then if (v95[v97[2]]~=v97[4]) then v89=v89 + 1 ;else v89=v97[3];end else local v315=0;local v316;while true do if (0==v315) then v316=v97[2];v95[v316]=v95[v316](v21(v95,v316 + 1 ,v97[3]));break;end end end elseif (v98<=89) then if (v98<=86) then if (v98<=84) then v89=v97[3];elseif (v98>85) then do return v95[v97[2]]();end else local v317=v97[2];local v318,v319=v88(v95[v317](v21(v95,v317 + 1 ,v97[3])));v90=(v319 + v317) -(3 -2) ;local v320=0;for v356=v317,v90 do local v357=0;while true do if (v357==0) then v320=v320 + 1 ;v95[v356]=v318[v320];break;end end end end elseif (v98<=87) then local v190=0;local v191;local v192;local v193;local v194;while true do if (v190==1) then v90=(v193 + v191) -1 ;v194=0;v190=2;end if (2==v190) then for v395=v191,v90 do v194=v194 + 1 ;v95[v395]=v192[v194];end break;end if (0==v190) then v191=v97[2];v192,v193=v88(v95[v191](v21(v95,v191 + (860 -(814 + 45)) ,v90)));v190=1;end end elseif (v98==88) then v72[v97[3]]=v95[v97[2]];else v95[v97[2]]=v72[v97[3]];end elseif (v98<=(226 -134)) then if (v98<=90) then local v195=v97[2];local v196={};for v220=1 + 0 , #v94 do local v221=0;local v222;while true do if (v221==0) then v222=v94[v220];for v420=0, #v222 do local v421=v222[v420];local v422=v421[1 + 0 ];local v423=v421[887 -(261 + 624) ];if ((v422==v95) and (v423>=v195)) then local v457=0;while true do if (v457==0) then v196[v423]=v422[v423];v421[1]=v196;break;end end end end break;end end end elseif (v98>(161 -70)) then v95[v97[2]]();else do return v95[v97[2]]();end end elseif (v98<=93) then local v197=0;local v198;while true do if (0==v197) then v198=v97[2];do return v21(v95,v198,v90);end break;end end elseif (v98>94) then v95[v97[2]]=v95[v97[1083 -(1020 + 60) ]] + v97[4] ;else v95[v97[1425 -(630 + 793) ]]=v95[v97[3]];end v89=v89 + 1 ;break;end if (v105==0) then v97=v85[v89];v98=v97[1];v105=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
